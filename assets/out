#!/bin/bash
#!/bin/sh -u

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

payload=$(cat)

# extract variables from json
dockerswarm_hostname=$(echo $payload | jq -r '.source.DOCKERSWARM_HOSTNAME')
dockerhub_user=$(echo $payload | jq -r '.source.DOCKERHUB_USER')
dockerhub_password=$(echo $payload | jq -r '.source.DOCKERHUB_PASSWORD')
stack_name=$(echo $payload | jq -r '.source.STACK_NAME')
environment=$(echo $payload | jq -r '.source.ENVIRONMENT')
dockerswarm_key=$(echo $payload | jq -r '.source.DOCKERSWARM_KEY')

echo --- SERVICE INFO ---
echo swarm hostname: ${dockerswarm_hostname}
echo swarm stack name: ${stack_name}
echo swarm environment: ${environment}
echo --- END ---

if [ ${environment} == "null" ] && [ "${stack_name}" == "null" ] && [ "${dockerswarm_hostname}" == "null" ] ; 
  then
    echo "error: source.environment is missing"
    exit 1
fi

#set -v

echo ${dockerswarm_key} | sed -e 's/\(KEY-----\)\s/\1\n/g; s/\s\(-----END\)/\n\1/g' | sed -e '2s/\s\+/\n/g' > /tmp/key.pem
chmod 0600 /tmp/key.pem

echo "establishing ssh tunbel"
screen -S sshtunnel -m -d sh -c \
  "ssh -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -i /tmp/key.pem -NL localhost:2376:/var/run/docker.sock root@${dockerswarm_hostname}"

sleep 3

echo "Deploying ${stack_name}"
export DOCKER_HOST="localhost:2376"
docker login -u ${dockerhub_user} -p ${dockerhub_password}
ls -lah
find .
docker stack deploy --prune -c ./main-repo/ci/docker-compose.${environment}.yml ${stack_name} --with-registry-auth

echo "terminating sshtunnel"
screen -S sshtunnel -X quit

echo "cleaning up"
rm -rf /tmp/key.tmp

echo '{ "version": { "ref": "'$BUILD_ID'" } }' >&3
